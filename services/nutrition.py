from typing import Dict, Literal

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —É—Ä–æ–≤–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞ –∫–ª—é—á–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞
ACTIVITY_MAPPING = {
    "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å": "minimal",
    "–ù–∏–∑–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å": "low",
    "–°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å": "medium",
    "–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å": "high",
    "–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å": "very_high"
}

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Ü–µ–ª–µ–π –Ω–∞ –∫–ª—é—á–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞
GOAL_MAPPING = {
    "–ü–æ—Ö—É–¥–µ–Ω–∏–µ": "loss",
    "–ù–∞–±–æ—Ä –º–∞—Å—Å—ã": "gain",
    "–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞": "maintenance"
}


class NutritionCalculator:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ö–ë–ñ–£ –∏ –ø–ª–∞–Ω–æ–≤ –ø–∏—Ç–∞–Ω–∏—è"""

    # –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    ACTIVITY_LEVELS = {
        "minimal": 1.2,  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        "low": 1.375,    # –ù–∏–∑–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        "medium": 1.55,  # –°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        "high": 1.725,   # –í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        "very_high": 1.9  # –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    }

    # –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ü–µ–ª–µ–π
    GOAL_MODIFIERS = {
        "loss": 0.85,     # –°–Ω–∏–∂–µ–Ω–∏–µ –≤–µ—Å–∞
        "maintenance": 1.0,  # –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞
        "gain": 1.15       # –ù–∞–±–æ—Ä –≤–µ—Å–∞
    }

    # –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ë–ñ–£ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ü–µ–ª–µ–π
    MACRO_RATIOS = {
        "loss": {"protein": 0.3, "fat": 0.3, "carbs": 0.4},
        "maintenance": {"protein": 0.25, "fat": 0.25, "carbs": 0.5},
        "gain": {"protein": 0.2, "fat": 0.2, "carbs": 0.6}
    }
    
    @staticmethod
    def calculate_bmr(
        gender: Literal["–º—É–∂—Å–∫–æ–π", "–∂–µ–Ω—Å–∫–∏–π"],
        weight: float,
        height: float,
        age: int
    ) -> float:
        """
        –†–∞—Å—á–µ—Ç –±–∞–∑–æ–≤–æ–≥–æ –º–µ—Ç–∞–±–æ–ª–∏–∑–º–∞ (BMR) –ø–æ —Ñ–æ—Ä–º—É–ª–µ –ë–µ–Ω–µ–¥–∏–∫—Ç–∞

        Args:
            gender: –ü–æ–ª ('–º—É–∂—Å–∫–æ–π' –∏–ª–∏ '–∂–µ–Ω—Å–∫–∏–π')
            weight: –í–µ—Å –≤ –∫–≥
            height: –†–æ—Å—Ç –≤ —Å–º
            age: –í–æ–∑—Ä–∞—Å—Ç –≤ –≥–æ–¥–∞—Ö

        Returns:
            –ë–∞–∑–æ–≤—ã–π –º–µ—Ç–∞–±–æ–ª–∏–∑–º –≤ –∫–∞–ª–æ—Ä–∏—è—Ö
        """
        if gender == "–º—É–∂—Å–∫–æ–π":
            # –§–æ—Ä–º—É–ª–∞ –¥–ª—è –º—É–∂—á–∏–Ω: 66 + (13.7 √ó –≤–µ—Å) + (5 √ó —Ä–æ—Å—Ç) - (6.8 √ó –≤–æ–∑—Ä–∞—Å—Ç)
            return 66 + (13.7 * weight) + (5 * height) - (6.8 * age)
        else:
            # –§–æ—Ä–º—É–ª–∞ –¥–ª—è –∂–µ–Ω—â–∏–Ω: 655 + (9.6 √ó –≤–µ—Å) + (1.8 √ó —Ä–æ—Å—Ç) - (4.7 √ó –≤–æ–∑—Ä–∞—Å—Ç)
            return 655 + (9.6 * weight) + (1.8 * height) - (4.7 * age)

    @classmethod
    def calculate_tdee(
        cls,
        gender: Literal["–º—É–∂—Å–∫–æ–π", "–∂–µ–Ω—Å–∫–∏–π"],
        weight: float,
        height: float,
        age: int,
        activity_level: str,
        goal: str
    ) -> Dict[str, float]:
        """
        –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø–æ–ª–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏ –≤ –¥–µ–Ω—å (TDEE) –∏ –ö–ë–ñ–£

        Args:
            gender: –ü–æ–ª ('–º—É–∂—Å–∫–æ–π' –∏–ª–∏ '–∂–µ–Ω—Å–∫–∏–π')
            weight: –í–µ—Å –≤ –∫–≥
            height: –†–æ—Å—Ç –≤ —Å–º
            age: –í–æ–∑—Ä–∞—Å—Ç –≤ –≥–æ–¥–∞—Ö
            activity_level: –£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            goal: –¶–µ–ª—å ('loss', 'maintenance', 'gain')

        Returns:
            –°–ª–æ–≤–∞—Ä—å —Å —Ä–∞—Å—á–µ—Ç–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ö–ë–ñ–£:
            - calories: –ö–∞–ª–æ—Ä–∏–∏
            - protein: –ë–µ–ª–∫–∏ –≤ –≥—Ä–∞–º–º–∞—Ö
            - fat: –ñ–∏—Ä—ã –≤ –≥—Ä–∞–º–º–∞—Ö
            - carbs: –£–≥–ª–µ–≤–æ–¥—ã –≤ –≥—Ä–∞–º–º–∞—Ö
        """
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –≤—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        if activity_level not in cls.ACTIVITY_LEVELS:
            raise ValueError(f"–ù–µ–≤–µ—Ä–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {activity_level}")

        if goal not in cls.GOAL_MODIFIERS:
            raise ValueError(f"–ù–µ–≤–µ—Ä–Ω–∞—è —Ü–µ–ª—å: {goal}")

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –±–∞–∑–æ–≤—ã–π –º–µ—Ç–∞–±–æ–ª–∏–∑–º
        bmr = cls.calculate_bmr(gender, weight, height, age)

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º TDEE —Å —É—á–µ—Ç–æ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ —Ü–µ–ª–∏
        activity_factor = cls.ACTIVITY_LEVELS[activity_level]
        goal_factor = cls.GOAL_MODIFIERS[goal]

        tdee = bmr * activity_factor * goal_factor

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞–∫—Ä–æ–Ω—É—Ç—Ä–∏–µ–Ω—Ç–æ–≤
        macro_ratio = cls.MACRO_RATIOS[goal]

        # –ë–µ–ª–∫–∏: 4 –∫–∞–ª–æ—Ä–∏–∏ –Ω–∞ –≥—Ä–∞–º–º
        protein_calories = tdee * macro_ratio["protein"]
        protein_grams = protein_calories / 4

        # –ñ–∏—Ä—ã: 9 –∫–∞–ª–æ—Ä–∏–π –Ω–∞ –≥—Ä–∞–º–º
        fat_calories = tdee * macro_ratio["fat"]
        fat_grams = fat_calories / 9

        # –£–≥–ª–µ–≤–æ–¥—ã: 4 –∫–∞–ª–æ—Ä–∏–∏ –Ω–∞ –≥—Ä–∞–º–º
        carb_calories = tdee * macro_ratio["carbs"]
        carb_grams = carb_calories / 4

        # –û–∫—Ä—É–≥–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
        return {
            "calories": round(tdee),
            "protein": round(protein_grams),
            "fat": round(fat_grams),
            "carbs": round(carb_grams)
        }
    
    @staticmethod
    def format_nutrition_info(nutrition_data: Dict[str, float]) -> str:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ö–ë–ñ–£ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è

        Args:
            nutrition_data: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –ö–ë–ñ–£

        Returns:
            –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –ö–ë–ñ–£
        """
        return (
            f"üìä –ö–ë–ñ–£:\n"
            f"üî• –ö–∞–ª–æ—Ä–∏–∏: {nutrition_data['calories']} –∫–∫–∞–ª\n"
            f"ü•© –ë–µ–ª–∫–∏: {nutrition_data['protein']} –≥\n"
            f"üßà –ñ–∏—Ä—ã: {nutrition_data['fat']} –≥\n"
            f"üçö –£–≥–ª–µ–≤–æ–¥—ã: {nutrition_data['carbs']} –≥"
        )


# –§—É–Ω–∫—Ü–∏—è-–æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö
def calculate_macros(
    gender: str,
    age: int,
    height: float,
    weight: float,
    activity_factor: float,
    goal: str
) -> Dict[str, float]:
    """
    –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ö–ë–ñ–£ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞
    
    Args:
        gender: –ü–æ–ª –∫–ª–∏–µ–Ω—Ç–∞ ("–ú—É–∂—Å–∫–æ–π" –∏–ª–∏ "–ñ–µ–Ω—Å–∫–∏–π")
        age: –í–æ–∑—Ä–∞—Å—Ç –∫–ª–∏–µ–Ω—Ç–∞ –≤ –≥–æ–¥–∞—Ö
        height: –†–æ—Å—Ç –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Å–º
        weight: –í–µ—Å –∫–ª–∏–µ–Ω—Ç–∞ –≤ –∫–≥
        activity_factor: –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (—á–∏—Å–ª–æ –æ—Ç 1.2 –¥–æ 1.9)
        goal: –¶–µ–ª—å ("–ü–æ—Ö—É–¥–µ–Ω–∏–µ", "–ù–∞–±–æ—Ä –º–∞—Å—Å—ã", "–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞")
    
    Returns:
        –°–ª–æ–≤–∞—Ä—å —Å —Ä–∞—Å—á–µ—Ç–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ö–ë–ñ–£:
        - calories: –ö–∞–ª–æ—Ä–∏–∏
        - protein: –ë–µ–ª–∫–∏ –≤ –≥—Ä–∞–º–º–∞—Ö
        - fat: –ñ–∏—Ä—ã –≤ –≥—Ä–∞–º–º–∞—Ö
        - carbs: –£–≥–ª–µ–≤–æ–¥—ã –≤ –≥—Ä–∞–º–º–∞—Ö
    """
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–∞ –∏ —Ü–µ–ª–∏ –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    gender_normalized = "–º—É–∂—Å–∫–æ–π" if gender == "–ú—É–∂—Å–∫–æ–π" else "–∂–µ–Ω—Å–∫–∏–π"
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª—é—á —Ü–µ–ª–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞
    goal_key = GOAL_MAPPING.get(goal, "maintenance")
    
    # –ò—â–µ–º –±–ª–∏–∂–∞–π—à–∏–π —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—É
    activity_key = "medium"  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    min_diff = float('inf')
    
    for level, factor in NutritionCalculator.ACTIVITY_LEVELS.items():
        diff = abs(factor - activity_factor)
        if diff < min_diff:
            min_diff = diff
            activity_key = level
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ö–ë–ñ–£ —Å –ø–æ–º–æ—â—å—é –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –ø–∏—Ç–∞–Ω–∏—è
    return NutritionCalculator.calculate_tdee(
        gender=gender_normalized,
        weight=weight,
        height=height,
        age=age,
        activity_level=activity_key,
        goal=goal_key
    )
