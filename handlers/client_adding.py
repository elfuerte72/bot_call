from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from models.states import ClientAddingStates
from keyboards.dialog_keyboards import (
    get_cancel_keyboard,
    get_gender_keyboard,
    get_activity_level_keyboard,
    get_goal_keyboard,
    get_confirm_keyboard
)
from keyboards.main_menu import get_main_menu
from database.db_handlers import add_client
from services.nutrition import calculate_macros


# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∏–∞–ª–æ–≥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞
router = Router()




# –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –∏—Ö –º–Ω–æ–∂–∏—Ç–µ–ª–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ö–ë–ñ–£
ACTIVITY_FACTORS = {
    "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å": 1.2,
    "–ù–∏–∑–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å": 1.375,
    "–°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å": 1.55,
    "–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å": 1.725,
    "–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å": 1.9
}


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞"


@router.message(F.text == "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞")
async def cmd_add_client(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞.

    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state: –ö–æ–Ω—Ç–µ–∫—Å—Ç FSM
    """
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∏–º–µ–Ω–∏
    await state.set_state(ClientAddingStates.waiting_for_name)
    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞:",
        reply_markup=get_cancel_keyboard()
    )



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –∫–ª–∏–µ–Ω—Ç–∞
@router.message(ClientAddingStates.waiting_for_name)
async def process_name(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –∫–ª–∏–µ–Ω—Ç–∞.

    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state: –ö–æ–Ω—Ç–µ–∫—Å—Ç FSM
    """
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –≤ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await state.update_data(name=message.text)
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø—Ä–æ—Å—É –≤–æ–∑—Ä–∞—Å—Ç–∞
    await state.set_state(ClientAddingStates.waiting_for_age)
    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –∫–ª–∏–µ–Ω—Ç–∞ (–ø–æ–ª–Ω—ã—Ö –ª–µ—Ç):",
        reply_markup=get_cancel_keyboard()
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞
@router.message(ClientAddingStates.waiting_for_age)
async def process_age(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state: –ö–æ–Ω—Ç–µ–∫—Å—Ç FSM
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç - —ç—Ç–æ —á–∏—Å–ª–æ –≤ –¥–æ–ø—É—Å—Ç–∏–º–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
    age = message.text
    if (not age.isdigit() or int(age) <= 0 or int(age) > 120):
        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 120)."
        )
        return
    
    age = int(message.text)
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç –≤ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await state.update_data(age=age)
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª–∞
    await state.set_state(ClientAddingStates.waiting_for_gender)
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª –∫–ª–∏–µ–Ω—Ç–∞:", 
        reply_markup=get_gender_keyboard()
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞ –∫–ª–∏–µ–Ω—Ç–∞
@router.message(ClientAddingStates.waiting_for_gender, F.text.in_(["–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π"]))
async def process_gender(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞ –∫–ª–∏–µ–Ω—Ç–∞.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state: –ö–æ–Ω—Ç–µ–∫—Å—Ç FSM
    """
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª –≤ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await state.update_data(gender=message.text)
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø—Ä–æ—Å—É —Ä–æ—Å—Ç–∞
    await state.set_state(ClientAddingStates.waiting_for_height)
    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ —Ä–æ—Å—Ç –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 175):", 
        reply_markup=get_cancel_keyboard()
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Ä–æ—Å—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞
@router.message(ClientAddingStates.waiting_for_height)
async def process_height(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Ä–æ—Å—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state: –ö–æ–Ω—Ç–µ–∫—Å—Ç FSM
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–æ—Å—Ç - —ç—Ç–æ —á–∏—Å–ª–æ
    if not message.text.isdigit() or int(message.text) <= 0 or int(message.text) > 250:
        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–æ—Å—Ç –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 250)."
        )
        return
    
    height = int(message.text)
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–æ—Å—Ç –≤ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await state.update_data(height=height)
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø—Ä–æ—Å—É –≤–µ—Å–∞
    await state.set_state(ClientAddingStates.waiting_for_weight)
    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å –∫–ª–∏–µ–Ω—Ç–∞ –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 70.5):", 
        reply_markup=get_cancel_keyboard()
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –≤–µ—Å–∞ –∫–ª–∏–µ–Ω—Ç–∞
@router.message(ClientAddingStates.waiting_for_weight)
async def process_weight(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –≤–µ—Å–∞ –∫–ª–∏–µ–Ω—Ç–∞.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state: –ö–æ–Ω—Ç–µ–∫—Å—Ç FSM
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–µ—Å - —ç—Ç–æ —á–∏—Å–ª–æ (–º–æ–∂–µ—Ç –±—ã—Ç—å —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π)
    try:
        weight = float(message.text.replace(',', '.'))
        if weight <= 0 or weight > 300:
            raise ValueError("–í–µ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º –æ—Ç 1 –¥–æ 300")
    except ValueError:
        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–µ—Å –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 70.5 –∏–ª–∏ 70,5)."
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–µ—Å –≤ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await state.update_data(weight=weight)
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø—Ä–æ—Å—É —É—Ä–æ–≤–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    await state.set_state(ClientAddingStates.waiting_for_activity)
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞:", 
        reply_markup=get_activity_level_keyboard()
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞
@router.message(ClientAddingStates.waiting_for_activity, F.text.in_(ACTIVITY_FACTORS.keys()))
async def process_activity(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state: –ö–æ–Ω—Ç–µ–∫—Å—Ç FSM
    """
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è
    activity = message.text
    activity_factor = ACTIVITY_FACTORS[activity]
    await state.update_data(activity=activity, activity_factor=activity_factor)
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø—Ä–æ—Å—É —Ü–µ–ª–∏
    await state.set_state(ClientAddingStates.waiting_for_goal)
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å –∫–ª–∏–µ–Ω—Ç–∞:", 
        reply_markup=get_goal_keyboard()
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–∏ –∫–ª–∏–µ–Ω—Ç–∞
@router.message(ClientAddingStates.waiting_for_goal, F.text.in_(["–ü–æ—Ö—É–¥–µ–Ω–∏–µ", "–ù–∞–±–æ—Ä –º–∞—Å—Å—ã", "–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞"]))
async def process_goal(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–∏ –∫–ª–∏–µ–Ω—Ç–∞.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state: –ö–æ–Ω—Ç–µ–∫—Å—Ç FSM
    """
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ü–µ–ª—å –≤ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è
    goal = message.text
    await state.update_data(goal=goal)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ö–ë–ñ–£ –ø–æ —Ñ–æ—Ä–º—É–ª–µ –ë–µ–Ω–µ–¥–∏–∫—Ç–∞
    macros = calculate_macros(
        gender=data['gender'], age=data['age'],
        height=data['height'], weight=data['weight'],
        activity_factor=data['activity_factor'],
        goal=data['goal']
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ö–ë–ñ–£ –≤ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await state.update_data(macros=macros)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–ª–∏–µ–Ω—Ç–∞
    client_info = (
        f"üìã –î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞:\n\n"
        f"üë§ –ò–º—è: {data['name']}\n"
        f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {data['age']} –ª–µ—Ç\n"
        f"‚öß –ü–æ–ª: {data['gender']}\n"
        f"üìè –†–æ—Å—Ç: {data['height']} —Å–º\n"
        f"‚öñ –í–µ—Å: {data['weight']} –∫–≥\n"
        f"üèÉ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {data['activity']}\n"
        f"üéØ –¶–µ–ª—å: {data['goal']}\n\n"
    )
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ö–ë–ñ–£
    macros_info = (
        f"üßÆ –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–µ –ö–ë–ñ–£:\n"
        f"üî• –ö–∞–ª–æ—Ä–∏–∏: {macros['calories']} –∫–∫–∞–ª\n"
        f"ü•© –ë–µ–ª–∫–∏: {macros['protein']} –≥\n"
        f"ü•ë –ñ–∏—Ä—ã: {macros['fat']} –≥\n"
        f"üçö –£–≥–ª–µ–≤–æ–¥—ã: {macros['carbs']} –≥\n\n"
    )
    confirm_msg = "–í—Å—ë –≤–µ—Ä–Ω–æ? –î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö?"
    message_text = client_info + macros_info + confirm_msg
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞
    await state.set_state(ClientAddingStates.waiting_for_confirmation)
    await message.answer(
        message_text,
        reply_markup=get_confirm_keyboard()
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞
@router.message(ClientAddingStates.waiting_for_confirmation, F.text.in_(["–î–∞", "–ù–µ—Ç"]))
async def process_confirmation(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state: –ö–æ–Ω—Ç–µ–∫—Å—Ç FSM
    """
    if message.text == "–î–∞":
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞
        data = await state.get_data()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        try:
            client_id = await add_client(
                name=data['name'],
                age=data['age'],
                gender=data['gender'],
                height=data['height'],
                weight=data['weight'],
                activity=data['activity'],
                goal=data['goal'],
                calories=data['macros']['calories'],
                protein=data['macros']['protein'],
                fat=data['macros']['fat'],
                carbs=data['macros']['carbs']
            )
            success_msg = (
                f"‚úÖ –ö–ª–∏–µ–Ω—Ç {data['name']} —É—Å–ø–µ—à–Ω–æ "
                f"–¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!\n"
                f"ID –∫–ª–∏–µ–Ω—Ç–∞: {client_id}"
            )
            await message.answer(
                success_msg,
                reply_markup=get_main_menu()
            )
        except Exception as e:
            error_msg = (
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞: {str(e)}\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
            )
            await message.answer(
                error_msg,
                reply_markup=get_main_menu()
            )
    else:
        await message.answer(
            "–û—Ç–º–µ–Ω–µ–Ω–æ. –ö–ª–∏–µ–Ω—Ç –Ω–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω.",
            reply_markup=get_main_menu()
        )
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
